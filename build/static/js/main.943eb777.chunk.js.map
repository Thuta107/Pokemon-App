{"version":3,"sources":["helper/type.js","home/img/battle.png","home/home.jsx","helper/format.js","box/rowgrid.jsx","helper/filter.js","displays/typechip.jsx","displays/typeflex.jsx","sheets/movesheet.jsx","cards/movecard.jsx","displays/topbar.jsx","move/move.jsx","cards/pokecard.jsx","sheets/infosheet.jsx","sheets/resistancesheet.jsx","helper/stat.js","displays/statbar.jsx","box/statgrid.jsx","sheets/statsheet.jsx","cards/dexcard.jsx","pokedex/pokedex.jsx","pokemon/pokemon.jsx","blank/blank.jsx","App.js","reportWebVitals.js","index.js"],"names":["typeColor","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","getTypeColor","type","getWeakness","weakness","result","name","types","key","push","filter","element","length","Home","className","to","Paper","elevation","sx","padding","backgroundColor","color","style","display","justifyContent","src","battleImage","titleCase","toUpperCase","substr","padZero","id","size","toString","padStart","formatName","nameArray","split","i","forEach","index","RowGrid","props","title","children","Divider","defaultProps","subEffect","description","chance","paraArray","TypeChip","Chip","label","fontWeight","minWidth","letterSpacing","TypeFlex","map","MoveSheet","data","category","damage","accuracy","priority","effectChance","MoveCard","useState","setData","useEffect","axios","get","url","then","response","desc","effect_entries","language","damage_class","power","short_effect","effect_chance","catch","error","console","log","maxWidth","textAlign","TopBarSearch","TextField","fullWidth","placeholder","value","search","onChange","e","handleFilter","TopBar","AppBar","handleBack","Button","startIcon","onClick","text","undefined","Move","move","setMove","view","setView","setSearch","currIndex","useRef","history","useHistory","observer","prevObserver","lastCard","useCallback","current","disconnect","IntersectionObserver","entries","isIntersecting","start","slice","filterArray","toLowerCase","startsWith","root","rootMargin","threshold","observe","results","target","ref","PokeCard","match","useRouteMatch","URL","image","sprites","front_default","moves","minHeight","path","paddingBottom","Ability","effect","InfoSheet","typing","abilities","ResistanceSheet","setWeakness","typeWeakness","damage_relations","half_damage_from","double_damage_from","no_damage_from","statRange","statColor","getStatColor","stat","StatBar","Skeleton","animation","width","StatGrid","StatSheet","stats","baseStat","total","calTotal","DexCard","pokemon","setPokemon","other","ability","base_stat","margin","placeSelf","PokeDex","forms","setForms","params","useParams","urlObj","varieties","elem","form","filterForm","Pokemon","lastPokemon","Blank","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.943eb777.chunk.js","sourcesContent":["const typeColor = {\r\n    normal: '#A8A77A',\r\n    fire: '#EE8130',\r\n    water: '#6390F0',\r\n    electric: '#F7D02C',\r\n    grass: '#7AC74C',\r\n    ice: '#96D9D6',\r\n    fighting: '#C22E28',\r\n    poison: '#A33EA1',\r\n    ground: '#E2BF65',\r\n    flying: '#A98FF3',\r\n    psychic: '#F95587',\r\n    bug: '#A6B91A',\r\n    rock: '#B6A136',\r\n    ghost: '#735797',\r\n    dragon: '#6F35FC',\r\n    dark: '#705746',\r\n    steel: '#B7B7CE',\r\n    fairy: '#D685AD'\r\n}\r\n\r\n\r\n/**\r\n * Function to select Type Color\r\n * @param {string} type - name of the type\r\n * @returns {string} - Corresponding color code for the type\r\n */\r\nconst getTypeColor = type => {\r\n    return typeColor[type]\r\n}\r\n\r\n\r\n/**\r\n * Function to group type effective from input type\r\n * @param {Object} weakness - Type with effectiveness in the format {type: effectiveness}\r\n * @returns - Weakness grouped by their effectiveness\r\n */\r\nconst getWeakness = weakness => {\r\n\r\n    let result = [\r\n        {name: '0x', types: []},\r\n        {name: '0.25x', types: []},\r\n        {name: '0.5x', types: []},\r\n        {name: '2.0x', types: []},\r\n        {name: '4.0x', types: []}\r\n    ]\r\n\r\n    for (const key in weakness) {\r\n        if(weakness[key] === 0) { \r\n            result[0].types.push(key) \r\n        } else if (weakness[key] === 0.25) { \r\n            result[1].types.push(key) \r\n        } else if(weakness[key] === 0.5) { \r\n            result[2].types.push(key) \r\n        } else if(weakness[key] === 2) { \r\n            result[3].types.push(key) \r\n        } else { \r\n            result[4].types.push(key) \r\n        }\r\n    }\r\n\r\n    result = result.filter(element => {\r\n        if (element.types.length > 0) {\r\n            return true\r\n        }\r\n        return false\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nexport { getWeakness, getTypeColor }","export default __webpack_public_path__ + \"static/media/battle.85202f0c.png\";","import { Link } from \"react-router-dom\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { getTypeColor } from \"../helper/type\";\r\nimport battleImage from \"./img/battle.png\"\r\nimport './home.css';\r\n\r\nconst Home = () => {\r\n\r\n    return(\r\n        <div className='nav-grid'>\r\n            <Link className='nav-item' to='/pokemon'>\r\n                <Paper elevation={5} sx={{padding:5, backgroundColor:getTypeColor('grass'), color:\"white\"}}>\r\n                    <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                        <img className='nav-img' src={battleImage}/>\r\n                    </div>\r\n                    <div className='nav-header'> Pokemon </div>\r\n                </Paper>\r\n            </Link>\r\n            <Link className='nav-item' to='/move'>\r\n                <Paper elevation={5} sx={{padding:5, backgroundColor:getTypeColor('dragon'), color:\"white\"}}>\r\n                    <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                        <img className='nav-img' src={battleImage}/>\r\n                    </div>\r\n                    <div className='nav-header'> Moves </div>\r\n                </Paper>\r\n            </Link>\r\n            <Link className='nav-item' to='/team'>\r\n                <Paper elevation={5} sx={{padding:5, backgroundColor:getTypeColor('fire'), color:\"white\"}}>\r\n                    <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                        <img className='nav-img' src={battleImage}/>\r\n                    </div>\r\n                    <div className='nav-header'> Team </div>\r\n                </Paper>\r\n            </Link>\r\n            <Link className='nav-item' to='/battle'>\r\n                <Paper elevation={5} sx={{padding:5, backgroundColor:getTypeColor('poison'), color:\"white\"}}>\r\n                    <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                        <img className='nav-img' src={battleImage}/>\r\n                    </div>\r\n                    <div className='nav-header'> Battle </div>\r\n                </Paper>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","/**\r\n * Function to convert input string to Title Case\r\n * @param {string} name - Input string \r\n * @returns {string} - Input string as title case\r\n */\r\nconst titleCase = name => {\r\n    return name[0].toUpperCase() + name.substr(1)\r\n}\r\n\r\n\r\n/**\r\n * Function to pad infront of the string\r\n * @param {number} id - Original numeric ID\r\n * @returns {string} - String with 0 padding\r\n */\r\nconst padZero = (id, size=3)=> {\r\n    return id.toString().padStart(size,'0')\r\n}\r\n\r\n\r\n/**\r\n * Function to convert input string to desired format\r\n * @param {string} name - Input string\r\n * @returns {string} - Formatted string from Input String\r\n */\r\nconst formatName = name => {\r\n\r\n    let nameArray = name.split('-');\r\n    let result;\r\n\r\n    for(let i = 0; i < nameArray.length; i++) {\r\n\r\n        // Check for Mega Forms\r\n        if(nameArray[i] === 'mega') {\r\n            if (i !== 0) {\r\n                result = nameArray[i]\r\n                nameArray[1] = nameArray[0]\r\n                nameArray[0] = result\r\n            }\r\n            break\r\n        }\r\n\r\n        // Check for Alola Froms\r\n        if(nameArray[i] === 'alola') {\r\n            nameArray[1] = nameArray[0]\r\n            nameArray[0] = 'alolan'\r\n            break\r\n        }\r\n\r\n        // Check for Alola Froms\r\n        if(nameArray[i] === 'galar') {\r\n            nameArray[1] = nameArray[0]\r\n            nameArray[0] = 'galarian'\r\n            break\r\n        }\r\n\r\n        // Check for Male Nidoran\r\n        if(nameArray[i] === 'm') {\r\n            nameArray[i] = '(Male)'\r\n            break\r\n        }\r\n\r\n        // Check for Female Nidoran\r\n        if(nameArray[i] === 'f') {\r\n            nameArray[i] = '(Female)'\r\n            break\r\n        }\r\n\r\n        // Format Special Attack & Defense\r\n        if(nameArray[i] === 'special') {\r\n            if(nameArray[i+1]) {\r\n                nameArray[i] = 'sp.'\r\n                nameArray[i+1] = nameArray[i+1] === 'attack' ? 'atk' : 'def'\r\n            }\r\n            break\r\n        }\r\n\r\n        // Format HP\r\n        if(nameArray[i] === 'hp') {\r\n            nameArray[i] = nameArray[i].toUpperCase()\r\n            break\r\n        }\r\n    }\r\n\r\n    // Convert to UpperCase and Add Spacing\r\n    result = ''\r\n    nameArray.forEach((name,index) => {\r\n        if (name !== '') {\r\n            if (index+1 === nameArray.length) {\r\n                result = result + titleCase(name)\r\n            } else {\r\n                result = result + titleCase(name) + ' '\r\n            }\r\n        }\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nexport { titleCase, formatName, padZero }","import { Divider } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport './box.css';\r\n\r\nconst RowGrid = props => {\r\n    return (\r\n        <>\r\n            <div className='row-grid'>\r\n                <div> {props.title} </div>\r\n                {props.children}\r\n            </div>\r\n            <Divider />\r\n        </>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nRowGrid.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nRowGrid.defaultProps = {\r\n    title: 'Testing',\r\n    children: <div> This is a Sample Pokemon Data </div>\r\n};\r\n\r\nexport default RowGrid;","/**\r\n * Function to filter out the G-Max & Totem Form\r\n * @param {string} name - Name or Form of the Pokemon\r\n * @returns {boolean} - False if G-Max or Totem and false otherwise\r\n */\r\nconst filterForm = name => {\r\n    let nameArray = name.split('-');\r\n    for(let i=0; i < nameArray.length; i++) {\r\n        if(nameArray[i] === 'gmax' || nameArray[i] === 'totem') {\r\n            return false\r\n        }\r\n    }\r\n    return true \r\n} \r\n\r\n/**\r\n * Function to add effect chance to move description\r\n * @param {string} description - move description\r\n * @param {number} chance - effect chance of the move\r\n * @returns {string} - move desciption with effect chance added\r\n */\r\n const subEffect = (description, chance) => {\r\n\r\n    if(!chance) return description;\r\n\r\n    let paraArray = description.split(' ');\r\n    let result;\r\n\r\n    for(let i=0; i < paraArray.length; i++) {\r\n        if(paraArray[i] === '$effect_chance%') {\r\n            paraArray[i] = chance+'%'\r\n        }\r\n    }\r\n\r\n    result = ''\r\n    paraArray.forEach((element,index) => {\r\n        if(index+1 === paraArray.length) {\r\n            result = result + element\r\n        } else {\r\n            result = result + element + ' '\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\nexport { filterForm, subEffect }","import { Chip } from '@mui/material'\r\nimport PropTypes from 'prop-types';\r\nimport { getTypeColor } from '../helper/type'\r\n\r\nconst TypeChip = props => {\r\n    return (\r\n        <Chip label={props.type.toUpperCase()} sx={{\r\n            backgroundColor: getTypeColor(props.type),\r\n            fontWeight: 'bold',\r\n            minWidth: 90,\r\n            color: '#FFFFFF',\r\n            letterSpacing: 0.5\r\n        }}/> \r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nTypeChip.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nTypeChip.defaultProps = {\r\n    type: \"fire\"\r\n};\r\n\r\nexport default TypeChip;","import TypeChip from './typechip';\r\nimport './display.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TypeFlex = props => {\r\n    return (\r\n        <div className='type-flex'>\r\n            {props.types.map(type => <div key={type}><TypeChip type={type}/></div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nTypeFlex.propTypes = {\r\n    types: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\n/** Default Props **/\r\nTypeFlex.defaultProps = {\r\n    types: ['water', 'ice']\r\n};\r\n\r\nexport default TypeFlex;","import RowGrid from \"../box/rowgrid\";\r\nimport { formatName } from \"../helper/format\"\r\nimport { subEffect } from \"../helper/filter\"\r\nimport TypeFlex from \"../displays/typeflex\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MoveSheet = props => {\r\n    return (\r\n        <>\r\n            <RowGrid title={'Typing'} children={<TypeFlex types={[props.data.type]}/>}/>\r\n            <RowGrid title={'Category'} children={<div>{formatName(props.data.category)}</div>}/>\r\n            <RowGrid title={'Damage'} children={<div>{props.data.damage}</div>}/>\r\n            <RowGrid title={'Accuracy'} children={<div>{props.data.accuracy}</div>}/>\r\n            <RowGrid title={'Priority'} children={<div>{props.data.priority}</div>}/>\r\n            <RowGrid title={'Description'} children={<div>{subEffect(props.data.description, props.data.effectChance)}</div>}/>\r\n        </>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nMoveSheet.propTypes = {\r\n    data: PropTypes.object.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nMoveSheet.defaultProps = {\r\n    data: {\r\n        type: 'fire',\r\n        category: 'physical',\r\n        damage: '80',\r\n        accuracy: '100',\r\n        priority: '0',\r\n        description: 'Hello World',\r\n        effectChance: '-'\r\n    }\r\n};\r\n\r\nexport default MoveSheet;","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { formatName } from \"../helper/format\"\r\nimport MoveSheet from \"../sheets/movesheet\";\r\nimport { Divider, Paper } from \"@mui/material\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MoveCard = props => {\r\n    \r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(props.url)\r\n        .then(response => {\r\n            let desc = response.data.effect_entries.filter(element => {\r\n                if(element.language.name === 'en') {\r\n                    return true\r\n                }\r\n                return false\r\n            })\r\n            setData({\r\n                id: response.data.id,\r\n                name: response.data.name,\r\n                type: response.data.type.name,\r\n                category: response.data.damage_class.name,\r\n                damage: response.data.power ? response.data.power : '-',\r\n                accuracy: response.data.accuracy ? response.data.accuracy : '-',\r\n                priority: response.data.priority,\r\n                description: desc.length > 0 ? desc[0].short_effect : '-',\r\n                effectChance: response.data.effect_chance\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, [])\r\n\r\n    return (\r\n        !data ? <></> : \r\n        <Paper elevation={5} sx={{padding:'20px', maxWidth:300}}>\r\n            <div style={{textAlign:'center'}}> \r\n                <h1> {formatName(data.name)} </h1>\r\n            </div>\r\n            <Divider />\r\n            <MoveSheet data={data}/>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nMoveCard.propTypes = {\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nMoveCard.defaultProps = {\r\n    url: 'https://pokeapi.co/api/v2/move/20/'\r\n};\r\n\r\nexport default MoveCard;","import { TextField, AppBar, Button } from '@mui/material'\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\r\nimport PropTypes from 'prop-types'\r\nimport './display.css'\r\n\r\nconst TopBarSearch = props => {\r\n    return (\r\n        <div className='topbar-search'>\r\n            <TextField fullWidth \r\n                placeholder=\"Search\"\r\n                value={props.search}\r\n                onChange={(e) => props.handleFilter(e)}\r\n                sx={{ backgroundColor:'white' }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TopBar = props => {\r\n    return (\r\n        <AppBar>\r\n            {(props.handleBack || props.handleFilter) ?\r\n            <div className='topbar-grid'>\r\n                <div className='topbar-back'> \r\n                    <Button startIcon={<ArrowBackIcon/>} onClick={() => props.handleBack()} sx={{color:'white'}}> \r\n                        {props.text} \r\n                    </Button>\r\n                </div>\r\n                {props.handleFilter ? <TopBarSearch search={props.search} handleFilter={props.handleFilter}/> : <></>}\r\n            </div> :\r\n            <div className='topbar-title'>\r\n                <div><h2>{props.text}</h2></div>\r\n            </div>}\r\n        </AppBar>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nTopBar.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    handleBack: PropTypes.func,\r\n    handleFilter: PropTypes.func,\r\n    search: PropTypes.string\r\n}\r\n\r\nTopBarSearch.propTypes = {\r\n    handleFilter: PropTypes.func.isRequired,\r\n    search: PropTypes.string.isRequired\r\n}\r\n\r\n/** Default Props **/\r\nTopBar.defaultProps  = {\r\n    text: \"Sample Testing\",\r\n    handleBack: undefined,\r\n    handleFilter: undefined,\r\n    search: undefined\r\n}\r\n\r\nexport default TopBar;","import { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport MoveCard from \"../cards/movecard\";\r\nimport TopBar from \"../displays/topbar\";\r\nimport { formatName } from \"../helper/format\";\r\nimport './move.css';\r\n\r\n\r\nconst Move = () => {\r\n    const baseURL = 'https://pokeapi.co/api/v2/move?limit=900'\r\n    const [move, setMove] = useState([])\r\n    const [view, setView] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const currIndex = useRef(0)\r\n    const history = useHistory();\r\n\r\n    // Setup Intersection Observer for Infinite Scrolling\r\n\tconst observer = useRef();\r\n    const prevObserver = useRef();\r\n\tconst lastCard = useCallback((element) => {\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\t\t\tlet options = {\r\n\t\t\t\troot: null,\r\n\t\t\t\trootMargin: '0px',\r\n\t\t\t\tthreshold: 0.3,\r\n\t\t\t};\r\n\r\n\t\t\t// Add observer to the last element\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tif(!entries[0].isIntersecting) return\r\n                let start = currIndex.current ? currIndex.current : 0\r\n                currIndex.current = currIndex.current + 5\r\n                if(search === '') {\r\n                    setView([...view, ...move.slice(start, currIndex.current)])\r\n                } else {\r\n                    let filterArray = move.filter(element => formatName(element.name).toLowerCase().startsWith(search.toLowerCase()))\r\n                    setView([...view, ...filterArray.slice(start, currIndex.current)])\r\n                }\r\n\t\t\t}, options);\r\n\t\t\tif (element && element !== prevObserver.current) {\r\n                observer.current.observe(element);\r\n                prevObserver.current = element\r\n            }\r\n\t\t}, [view]\r\n\t);\r\n\r\n    // Get all the Pokemon Moves\r\n    useEffect(() => {\r\n        axios.get(baseURL)\r\n        .then(response => {\r\n            setMove([...response.data.results])\r\n            let start = currIndex.current\r\n            currIndex.current = currIndex.current + 5\r\n            setView([...view, ...response.data.results.slice(start, currIndex.current)])\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, [])\r\n\r\n    // List all the Move Cards\r\n    const listCards = () => {\r\n        return(view.map((element, index) => {\r\n            if(view.length === index+1) {\r\n                return <div ref={lastCard} key={element.name}> <MoveCard url={element.url}/> </div>\r\n            } else {\r\n                return <div key={element.name}> <MoveCard url={element.url}/> </div>\r\n            }\r\n        }))\r\n    }\r\n\r\n    // Handle Search Form Change\r\n    const handleFilter = e => {\r\n        let start = 0;\r\n        currIndex.current = start + 5\r\n        if(e.target.value == '') {\r\n            setSearch(e.target.value)\r\n            setView([...move.slice(start, currIndex.current)])\r\n        } else {\r\n            let filterArray = move.filter(element => formatName(element.name).toLowerCase().startsWith(e.target.value.toLowerCase()))\r\n            setSearch(e.target.value)\r\n            setView([...filterArray.slice(start, currIndex.current)])\r\n        }\r\n    }\r\n\r\n    // Go back to Home Page\r\n    const goHome = () => {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TopBar text={'Back to Home'} handleBack={goHome} handleFilter={handleFilter} search={search}/>\r\n            <div className='move-grid'> {listCards()} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Move;","import { useRouteMatch, Link } from 'react-router-dom'\r\nimport { useEffect, useState } from \"react\";\r\nimport { Paper } from '@mui/material'\r\nimport TypeFlex from \"../displays/typeflex\";\r\nimport { formatName } from \"../helper/format\";\r\nimport { getTypeColor } from \"../helper/type\";\r\nimport PropTypes from 'prop-types';\r\nimport './card.css'\r\nimport axios from \"axios\";\r\n\r\n\r\nconst PokeCard = props => {\r\n\r\n    const pokemonURL = 'https://pokeapi.co/api/v2/pokemon/'\r\n    const [data, setData] = useState(null)\r\n    const match = useRouteMatch()\r\n\r\n    useEffect(() => {\r\n        const url = new URL(props.name, pokemonURL).toString()\r\n        axios.get(url)\r\n        .then(response => {\r\n            setData({\r\n                name: response.data.name,\r\n                types: response.data.types.map(type => type.type.name),\r\n                image: response.data.sprites.front_default,\r\n                moves: response.data.moves.map(move => move.move)\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, [])\r\n\r\n    return (\r\n        !data ? <></> :\r\n        <Paper sx={{minHeight:300, maxWidth:300}}>\r\n            <Link className='poke-link' to={`${match.path}/${data.name}`}>\r\n                <div className=\"flex-center\" style={{backgroundColor:getTypeColor(data.types[0])}}>\r\n                    <img className=\"sprite-image\" src={data.image}/>\r\n                </div>\r\n                <div style={{textAlign:'center'}}>\r\n                    <h2>{formatName(data.name)}</h2>\r\n                </div>\r\n                <div className=\"flex-center\" style={{paddingBottom:'5%'}}>\r\n                    <TypeFlex types={data.types}/>\r\n                </div>\r\n            </Link>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nPokeCard.propTypes = {\r\n    name: PropTypes.string.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nPokeCard.defaultProps = {\r\n    name: \"blastoise\"\r\n};\r\n\r\nexport default PokeCard;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport RowGrid from \"../box/rowgrid\";\r\nimport TypeFlex from \"../displays/typeflex\";\r\nimport PropTypes from 'prop-types'\r\nimport { formatName, padZero } from \"../helper/format\";\r\nimport { Divider } from \"@mui/material\";\r\nimport './sheet.css'\r\n\r\nconst Ability = props => {\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(props.url)\r\n        .then(response => {\r\n            const desc = response.data.effect_entries.filter(element => element.language.name === 'en')\r\n            setData({\r\n                name: response.data.name,\r\n                description: desc[0].effect\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, [])\r\n\r\n    return (\r\n        !data ? <></> : \r\n        <RowGrid title={formatName(data.name)} children={<div>{data.description}</div>}/>\r\n    )\r\n}\r\n\r\nconst InfoSheet = props => {\r\n    return (\r\n        <div>\r\n            <h1 className='chart-header'> Basic Information </h1>\r\n            <Divider />\r\n            {props.data.id < 900 ? <RowGrid title={'ID'} children={<div>{padZero(props.data.id)}</div>}/> : <></>}\r\n            <RowGrid title={'Name'} children={<div>{formatName(props.data.name)}</div>}/>\r\n            <RowGrid title={'Typing'} children={<TypeFlex types={props.data.typing}/>}/>\r\n            {props.data.abilities.map(element => <Ability url={element.url}/>)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n/** Prop Types **/\r\nInfoSheet.propTypes = {\r\n    data: PropTypes.object.isRequired\r\n};\r\n\r\nAbility.propTypes = {\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nInfoSheet.defaultProps = {\r\n    data: {\r\n        id: 6,\r\n        name: \"blastoise\",\r\n        typing: [\"water\"],\r\n        abilities: [{\r\n            name:\"torrent\",\r\n            url:\"https://pokeapi.co/api/v2/ability/67/\"\r\n        }, {\r\n            name:\"rain-dish\",\r\n            url:\"https://pokeapi.co/api/v2/ability/44/\"\r\n        }]\r\n    }\r\n};\r\n\r\nexport default InfoSheet;","import { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { Divider } from \"@mui/material\"\r\nimport { getWeakness } from \"../helper/type\"\r\nimport RowGrid from \"../box/rowgrid\"\r\nimport TypeFlex from \"../displays/typeflex\"\r\nimport PropTypes from 'prop-types'\r\nimport './sheet.css'\r\n\r\nconst ResistanceSheet = props => {\r\n\r\n    const [weakness, setWeakness] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let typeWeakness = {};\r\n        axios.get(props.types[0].url).then(response => {\r\n            response.data.damage_relations.half_damage_from.forEach(type => { typeWeakness[type.name] = 0.5; });\r\n            response.data.damage_relations.double_damage_from.forEach(type => { typeWeakness[type.name] = 2; });\r\n            response.data.damage_relations.no_damage_from.forEach(type => { typeWeakness[type.name] = 0; });\r\n\r\n            if (props.types.length > 1) {\r\n                axios.get(props.types[1].url).then(response => {\r\n                    response.data.damage_relations.half_damage_from.forEach(type => {\r\n                        if(type.name in typeWeakness) {\r\n                            let result = typeWeakness[type.name] * 0.5\r\n                            result == 1 ? delete typeWeakness[type.name] : typeWeakness[type.name] = result\r\n                        } else {\r\n                            typeWeakness[type.name] = 0.5;\r\n                        }\r\n                    });\r\n                    response.data.damage_relations.double_damage_from.forEach(type => {\r\n                        if(type.name in typeWeakness) {\r\n                            let result = typeWeakness[type.name] * 2\r\n                            result == 1 ? delete typeWeakness[type.name] : typeWeakness[type.name] = result\r\n                        } else {\r\n                            typeWeakness[type.name] = 2;\r\n                        }\r\n                    });\r\n                    response.data.damage_relations.no_damage_from.forEach(type => {\r\n                        typeWeakness[type.name] = 0;\r\n                    });\r\n                    setWeakness(typeWeakness);\r\n                })\r\n                .catch(error =>  console.error('Secondary Type', error))\r\n            } else { setWeakness(typeWeakness) }\r\n        })\r\n        .catch(error =>  console.error('Primary Type', error))\r\n    }, [])\r\n\r\n    return (\r\n        !weakness ? <></> : \r\n        <div>\r\n            <h1 className='chart-header'> Type Effectiveness </h1>\r\n            <Divider />\r\n            {getWeakness(weakness).map(element => {\r\n            return (\r\n                <div key={element.name}>\r\n                    <RowGrid title={element.name} children={<TypeFlex types={element.types}/>}/>\r\n                    <Divider />\r\n                </div>\r\n            )})} \r\n        </div>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nResistanceSheet.propTypes = {\r\n    types: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\n/** Default Props **/\r\nResistanceSheet.defaultProps = {\r\n    types: [{url: 'https://pokeapi.co/api/v2/type/water'}, {url: 'https://pokeapi.co/api/v2/type/fire'}]\r\n};\r\n\r\nexport default ResistanceSheet;","const statRange = {\r\n    low: 50,\r\n    average: 100,\r\n    max: 200,\r\n}\r\n\r\nconst statColor = {\r\n    low: '#FA8128',\r\n\taverage: '#F7D02C',\r\n\thigh: '#8CC43C'\r\n}\r\n\r\n\r\n/**\r\n * Function to select Stat Bar Color\r\n * @param {number} stat - Stat value\r\n * @returns {string} - Corresponding color for the stat bar\r\n */\r\nconst getStatColor = stat => {\r\n    if(stat < statRange.low) {\r\n        return statColor.low;\r\n    } else if (stat < statRange.average) {\r\n        return statColor.average;\r\n    } else {\r\n        return statColor.high;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Function to select Stat Bar Width\r\n * @param {number} stat - Stat value\r\n * @returns {number} - Corresponding width for the stat bar\r\n */\r\nconst getStatWidth = stat => {\r\n    if(stat * (100/statRange.max) < 100) {\r\n        return stat * (100/statRange.max)\r\n    }\r\n    return 100;\r\n}\r\n\r\nexport { getStatColor, getStatWidth }","import PropTypes from 'prop-types'\r\nimport { Skeleton } from '@mui/material'\r\nimport { getStatColor, getStatWidth } from '../helper/stat';\r\n\r\nconst StatBar = props => {\r\n    return (\r\n        <Skeleton animation={false} sx={{\r\n            width: `${getStatWidth(props.value)}%`, \r\n            backgroundColor: getStatColor(props.value)\r\n        }}/>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nStatBar.propTypes = {\r\n    value: PropTypes.number.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nStatBar.defaultProps = {\r\n    value: 100\r\n};\r\n\r\nexport default StatBar","import { Divider } from '@mui/material';\r\nimport StatBar from '../displays/statbar';\r\nimport PropTypes from 'prop-types';\r\nimport './box.css';\r\n\r\nconst StatGrid = props => {\r\n    return (\r\n        <>\r\n            <div className='stat-grid'>\r\n                <div> {props.name} </div>\r\n                <div className='stat-value'> {props.value} </div>\r\n                <div> {props.name.toLowerCase() === 'total' ? <></> : <StatBar value={props.value}/>} </div>\r\n            </div>\r\n            <Divider />\r\n        </>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nStatGrid.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nStatGrid.defaultProps = {\r\n    name: 'Attack',\r\n    value: 80\r\n};\r\n\r\nexport default StatGrid;","import StatGrid from '../box/statgrid';\r\nimport PropTypes from 'prop-types'\r\nimport { formatName } from '../helper/format';\r\nimport { Divider } from \"@mui/material\";\r\nimport './sheet.css'\r\n\r\nconst StatSheet = props => {\r\n\r\n    const calTotal = () => {\r\n        let total = 0;\r\n        props.stats.forEach(element => {\r\n            total = total + element.baseStat\r\n        })\r\n        return total\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='chart-header'> Base Stats </h1>\r\n            <Divider />\r\n            {props.stats.map(element => <StatGrid name={formatName(element.name)} value={element.baseStat}/>)}\r\n            <StatGrid name={formatName('total')} value={calTotal()}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nStatSheet.propTypes = {\r\n    stats: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\n/** Default Props **/\r\nStatSheet.defaultProps = {\r\n    stats: [{\r\n        baseStat: 100,\r\n        name: \"hp\"\r\n    }, {\r\n        baseStat: 100,\r\n        name: \"attack\"\r\n    }, {\r\n        baseStat: 100,\r\n        name: \"defense\"\r\n    }, {\r\n        baseStat: 100,\r\n        name: \"special-attack\"\r\n    }, {\r\n        baseStat: 100,\r\n        name: \"special-defense\"\r\n    }, {\r\n        baseStat: 100,\r\n        name: \"speed\"\r\n    }]\r\n};\r\n\r\nexport default StatSheet;","import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Paper } from '@mui/material'\r\nimport InfoSheet from '../sheets/infosheet';\r\nimport ResistanceSheet from '../sheets/resistancesheet';\r\nimport StatSheet from '../sheets/statsheet';\r\nimport PropTypes from 'prop-types';\r\nimport './card.css';\r\n\r\nconst DexCard = props => {\r\n    \r\n    const [pokemon, setPokemon] = useState(null)\r\n\r\n    useEffect(() => {\r\n        axios.get(props.url)\r\n        .then(response => {\r\n            setPokemon({\r\n                id: response.data.id,\r\n                name: response.data.name,\r\n                image: response.data.sprites.other['official-artwork'].front_default,\r\n                types: response.data.types.map(type => type.type),\r\n                abilities: response.data.abilities.map(ability => ability.ability),\r\n                stats: response.data.stats.map(element => {\r\n                    return({\r\n                        baseStat: element.base_stat,\r\n                        name: element.stat.name\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, [])\r\n\r\n    return (\r\n        !pokemon ? <></> : \r\n        <div style={{margin: \"100px 5%\"}}>\r\n            <Paper elevation={5}>\r\n                <div className='dex-grid'>\r\n                    <div style={{placeSelf: 'center'}}>\r\n                        <img className=\"art-image\" src={pokemon.image}/>\r\n                    </div>\r\n                    <InfoSheet data = {{\r\n                        id: pokemon.id,\r\n                        name: pokemon.name,\r\n                        typing: pokemon.types.map(element => element.name),\r\n                        abilities: pokemon.abilities\r\n                    }}/>\r\n                    <StatSheet stats={pokemon.stats}/>\r\n                    <ResistanceSheet types={pokemon.types}/>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n/** Prop Types **/\r\nDexCard.propTypes = {\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\n/** Default Props **/\r\nDexCard.defaultProps = {\r\n    url: \"https://pokeapi.co/api/v2/pokemon/blastoise/\"\r\n};\r\n\r\nexport default DexCard;","import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { filterForm } from '../helper/filter';\r\nimport DexCard from '../cards/dexcard';\r\nimport TopBar from '../displays/topbar';\r\n\r\nconst PokeDex = () => {\r\n    const baseURL = 'https://pokeapi.co/api/v2/pokemon-species/'\r\n    const [forms, setForms] = useState([]);\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        const urlObj = new URL(params.pokemon, baseURL)\r\n        console.log(\"Hello\")\r\n        axios.get(urlObj.toString())\r\n        .then(response => {\r\n            setForms(response.data.varieties.map(elem => elem.pokemon))\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, [])\r\n\r\n    // Go Back to Pokemon Page\r\n    const goPokemon = () => {\r\n        history.push('/pokemon')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TopBar text={'Back to Pokemon'} handleBack={goPokemon} />\r\n            {forms.filter(form => filterForm(form.name)).map(form => <div key={form.name}> <DexCard url={form.url}/> </div>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokeDex;","import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { Divider } from '@mui/material';\r\nimport axios from 'axios';\r\nimport PokeCard from '../cards/pokecard';\r\nimport PokeDex from '../pokedex/pokedex';\r\nimport TopBar from '../displays/topbar';\r\nimport { formatName } from '../helper/format';\r\nimport './pokemon.css'\r\n\r\nconst Pokemon = () => {\r\n    const baseURL = 'https://pokeapi.co/api/v2/pokemon-species/?limit=1000';\r\n    const [pokemon, setPokemon] = useState([])\r\n    const [view, setView] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const currIndex = useRef(0)\r\n    const match = useRouteMatch()\r\n    const history = useHistory();\r\n    \r\n    // Setup Intersection Observer for Infinite Scrolling\r\n\tconst observer = useRef();\r\n    const prevObserver = useRef();\r\n\tconst lastPokemon = useCallback((element) => {\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\t\t\tlet options = {\r\n\t\t\t\troot: null,\r\n\t\t\t\trootMargin: '0px',\r\n\t\t\t\tthreshold: 0.3,\r\n\t\t\t};\r\n\r\n\t\t\t// Add observer to the last element\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tif(!entries[0].isIntersecting) return\r\n                let start = currIndex.current ? currIndex.current : 0\r\n                currIndex.current = currIndex.current + 5\r\n                if(search === '') {\r\n                    setView([...view, ...pokemon.slice(start, currIndex.current)])\r\n                } else {\r\n                    let filterArray = pokemon.filter(name => formatName(name).toLowerCase().startsWith(search.toLowerCase()))\r\n                    setView([...view, ...filterArray.slice(start, currIndex.current)])\r\n                }\r\n\t\t\t}, options);\r\n\t\t\tif (element && element !== prevObserver.current) {\r\n                observer.current.observe(element);\r\n                prevObserver.current = element\r\n            }\r\n\t\t}, [view]\r\n\t);\r\n\r\n    // Get all the Pokemon Species\r\n    useEffect(() => {\r\n        axios.get(baseURL)\r\n        .then(response => {\r\n            setPokemon([...response.data.results.map(elem => elem.name)])\r\n            let start = currIndex.current\r\n            currIndex.current = currIndex.current + 5\r\n            setView([...view, ...response.data.results.map(elem => elem.name).slice(start,currIndex.current)])\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, [])\r\n\r\n    // List all the Pokemon Cards\r\n    const listCards = () => {\r\n        return(view.map((element,index) => {\r\n            if(view.length === index+1) {\r\n                return <div ref={lastPokemon} key={element}> <PokeCard name={element} /> </div>\r\n            } else {\r\n                return <div key={element}> <PokeCard name={element} /> </div>\r\n            }\r\n        }))\r\n    }\r\n\r\n    // Handle Search Form Change\r\n    const handleFilter = e => {\r\n        let start = 0;\r\n        currIndex.current = start + 5\r\n        console.log(e.target.value)\r\n        if(e.target.value == '') {\r\n            setSearch(e.target.value)\r\n            setView([...pokemon.slice(start, currIndex.current)])\r\n        } else {\r\n            let filterArray = pokemon.filter(name => formatName(name).toLowerCase().startsWith(e.target.value.toLowerCase()))\r\n            setSearch(e.target.value)\r\n            setView([...filterArray.slice(start, currIndex.current)])\r\n        }\r\n    }\r\n\r\n    // Go back to Home\r\n    const goHome = () => {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return(\r\n        <Switch>\r\n            <Route path={`${match.path}/:pokemon`}>\r\n                <PokeDex />\r\n            </Route>\r\n            <Route path={match.path}>\r\n                <TopBar text={'Back to Home'} handleBack={goHome} handleFilter={handleFilter} search={search}/>\r\n                <Divider />\r\n                <div className='pokecard-grid'> {listCards()} </div>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Pokemon;","import { useHistory } from 'react-router';\r\nimport TopBar from '../displays/topbar';\r\nimport './blank.css'\r\n\r\nconst Blank = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <TopBar text=\"Back to Home\" handleBack={() => history.push(\"/\")}/>\r\n            <div className='blank'> \r\n                <div> This page is currently under construction🛠️ ... </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blank;","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./home/home\";\nimport Move from \"./move/move\";\nimport Pokemon from \"./pokemon/pokemon\";\nimport TopBar from \"./displays/topbar\";\nimport Blank from \"./blank/blank\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/'>\n          <TopBar text={'PokemonTeam'} />\n          <Home />\n        </Route>\n        <Route path='/pokemon'> <Pokemon /> </Route>\n        <Route path='/move'> <Move /> </Route>\n        <Route path='/team'> <Blank /> </Route> \n        <Route path='/battle'> <Blank /> </Route> \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}